[{"/home/eric/projetos/GoStack/gobarber-web/src/styles/global.ts":"1","/home/eric/projetos/GoStack/gobarber-web/src/index.tsx":"2","/home/eric/projetos/GoStack/gobarber-web/src/App.tsx":"3","/home/eric/projetos/GoStack/gobarber-web/src/pages/SignIn/styles.ts":"4","/home/eric/projetos/GoStack/gobarber-web/src/pages/SignIn/index.tsx":"5","/home/eric/projetos/GoStack/gobarber-web/src/components/Button/index.tsx":"6","/home/eric/projetos/GoStack/gobarber-web/src/components/Input/index.tsx":"7","/home/eric/projetos/GoStack/gobarber-web/src/components/Button/styles.ts":"8","/home/eric/projetos/GoStack/gobarber-web/src/components/Input/styles.ts":"9","/home/eric/projetos/GoStack/gobarber-web/src/pages/SignUp/styles.ts":"10","/home/eric/projetos/GoStack/gobarber-web/src/pages/SignUp/index.tsx":"11","/home/eric/projetos/GoStack/gobarber-web/src/utils/getValidationErrors.ts":"12","/home/eric/projetos/GoStack/gobarber-web/src/components/Tooltip/index.tsx":"13","/home/eric/projetos/GoStack/gobarber-web/src/components/Tooltip/styles.ts":"14"},{"size":513,"mtime":1608157799292,"results":"15","hashOfConfig":"16"},{"size":198,"mtime":1608073720494,"results":"17","hashOfConfig":"18"},{"size":263,"mtime":1608676969287,"results":"19","hashOfConfig":"20"},{"size":1157,"mtime":1608244854966,"results":"21","hashOfConfig":"20"},{"size":1782,"mtime":1608677802260,"results":"22","hashOfConfig":"20"},{"size":316,"mtime":1608243951660,"results":"23","hashOfConfig":"20"},{"size":1591,"mtime":1608590226254,"results":"24","hashOfConfig":"20"},{"size":381,"mtime":1608244885530,"results":"25","hashOfConfig":"20"},{"size":1106,"mtime":1608592061884,"results":"26","hashOfConfig":"20"},{"size":1157,"mtime":1608245609858,"results":"27","hashOfConfig":"20"},{"size":1883,"mtime":1608483468086,"results":"28","hashOfConfig":"20"},{"size":320,"mtime":1608482752160,"results":"29","hashOfConfig":"20"},{"size":354,"mtime":1608590262903,"results":"30","hashOfConfig":"20"},{"size":743,"mtime":1608592181774,"results":"31","hashOfConfig":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bw6bnu",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ah5f1p",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"185g891",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/eric/projetos/GoStack/gobarber-web/src/styles/global.ts",[],"/home/eric/projetos/GoStack/gobarber-web/src/index.tsx",[],"/home/eric/projetos/GoStack/gobarber-web/src/App.tsx",[],"/home/eric/projetos/GoStack/gobarber-web/src/pages/SignIn/styles.ts",[],"/home/eric/projetos/GoStack/gobarber-web/src/pages/SignIn/index.tsx",[],"/home/eric/projetos/GoStack/gobarber-web/src/components/Button/index.tsx",[],"/home/eric/projetos/GoStack/gobarber-web/src/components/Input/index.tsx",["61"],"import React, {\n  InputHTMLAttributes,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { IconBaseProps } from 'react-icons';\nimport { useField } from '@unform/core';\n\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { Container, Error } from './styles';\n\nimport Tooltip from '../Tooltip';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  icon?: React.ComponentType<IconBaseProps>;\n}\n\nconst Input: React.FC<InputProps> = ({ name, icon: Icon, ...rest }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [isFocused, setIsfocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n\n  const handleInputFocus = useCallback(() => {\n    setIsfocused(true);\n  }, []);\n\n  const handleInputBlur = useCallback(() => {\n    setIsfocused(false);\n\n    setIsFilled(!!inputRef.current?.value);\n  }, []);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n  return (\n    <Container isErrored={!!error} isFilled={isFilled} isFocused={isFocused}>\n      {Icon && <Icon size={20} />}\n      <input\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        defaultValue={defaultValue}\n        ref={inputRef}\n        {...rest}\n      />\n\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle color=\"#c53030\" size={20} />\n        </Error>\n      )}\n    </Container>\n  );\n};\n\nexport default Input;\n","/home/eric/projetos/GoStack/gobarber-web/src/components/Button/styles.ts",[],"/home/eric/projetos/GoStack/gobarber-web/src/components/Input/styles.ts",[],"/home/eric/projetos/GoStack/gobarber-web/src/pages/SignUp/styles.ts",[],"/home/eric/projetos/GoStack/gobarber-web/src/pages/SignUp/index.tsx",[],"/home/eric/projetos/GoStack/gobarber-web/src/utils/getValidationErrors.ts",[],"/home/eric/projetos/GoStack/gobarber-web/src/components/Tooltip/index.tsx",[],"/home/eric/projetos/GoStack/gobarber-web/src/components/Tooltip/styles.ts",[],{"ruleId":"62","severity":1,"message":"63","line":14,"column":8,"nodeType":"64","messageId":"65","endLine":14,"endColumn":15},"@typescript-eslint/no-unused-vars","'Tooltip' is defined but never used.","Identifier","unusedVar"]